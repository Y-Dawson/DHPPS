'use strict';

var utils = require('./utils');
var bind = require('./helpers/bind');
var Axios = require('./core/Axios');
var mergeConfig = require('./core/mergeConfig');
var defaults = require('./defaults');

/**
 * Create an cInstance of Axios
 *
 * @param {Object} defaultConfig The default config for the cInstance
 * @return {Axios} A new cInstance of Axios
 */
function createcInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var cInstance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to cInstance
  utils.extend(cInstance, Axios.prototype, context);

  // Copy context to cInstance
  utils.extend(cInstance, context);

  return cInstance;
}

// Create the default cInstance to be exported
var axios = createcInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new cInstances
axios.create = function create(cInstanceConfig) {
  return createcInstance(mergeConfig(axios.defaults, cInstanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = require('./cancel/Cancel');
axios.CancelToken = require('./cancel/CancelToken');
axios.isCancel = require('./cancel/isCancel');

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = require('./helpers/spread');

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;
