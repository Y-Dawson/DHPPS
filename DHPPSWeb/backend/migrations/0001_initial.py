# Generated by Django 3.1.3 on 2020-11-08 11:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cityposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
            ],
            options={
                'db_table': 'cityposition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dailyforecastdata',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('population', models.BigIntegerField()),
                ('infected', models.BigIntegerField()),
            ],
            options={
                'db_table': 'dailyforecastdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Initroaddata',
            fields=[
                ('roadid', models.CharField(db_column='roadID', max_length=50, primary_key=True, serialize=False)),
                ('departure', models.CharField(max_length=50)),
                ('destination', models.CharField(max_length=50)),
                ('volume', models.BigIntegerField()),
            ],
            options={
                'db_table': 'initroaddata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logindata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(db_column='passWord', max_length=20)),
            ],
            options={
                'db_table': 'logindata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modeldata',
            fields=[
                ('layerid', models.CharField(db_column='layerID', max_length=20, primary_key=True, serialize=False)),
                ('layername', models.CharField(db_column='layerName', max_length=20)),
                ('layerparm', models.CharField(db_column='layerParm', max_length=20)),
            ],
            options={
                'db_table': 'modeldata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Personalprofile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_column='userName', max_length=50)),
                ('phonenumber', models.CharField(db_column='phoneNumber', max_length=11)),
                ('sex', models.IntegerField()),
                ('address', models.CharField(max_length=200)),
                ('email', models.CharField(db_column='Email', max_length=50)),
                ('birth', models.DateField()),
            ],
            options={
                'db_table': 'personalprofile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('themeno', models.IntegerField(db_column='themeNo', primary_key=True, serialize=False)),
                ('themename', models.CharField(db_column='themeName', max_length=50)),
            ],
            options={
                'db_table': 'theme',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('author', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Accountinformation',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='backend.logindata')),
                ('createdate', models.DateField(db_column='createDate')),
                ('remark', models.CharField(max_length=200)),
                ('casenumber', models.IntegerField(db_column='caseNumber')),
                ('authority', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'accountinformation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Initcitydata',
            fields=[
                ('cityid', models.OneToOneField(db_column='cityID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='backend.cityposition')),
                ('cityname', models.CharField(db_column='cityName', max_length=50)),
                ('initpop', models.BigIntegerField(db_column='initPop')),
                ('initinfect', models.BigIntegerField(db_column='initInfect')),
            ],
            options={
                'db_table': 'initcitydata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Casedata',
            fields=[
                ('caseid', models.OneToOneField(db_column='caseID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='backend.accountinformation')),
                ('id', models.CharField(blank=True, db_column='ID', max_length=20, null=True)),
                ('casename', models.CharField(db_column='caseName', max_length=50)),
                ('citynumber', models.IntegerField(db_column='cityNumber')),
                ('roadnumber', models.IntegerField(db_column='roadNumber')),
                ('inittotal', models.BigIntegerField(db_column='initTotal')),
                ('inittotalinfected', models.BigIntegerField(db_column='initTotalInfected')),
            ],
            options={
                'db_table': 'casedata',
                'managed': False,
            },
        ),
    ]
